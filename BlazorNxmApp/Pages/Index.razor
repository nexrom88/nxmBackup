@page "/"
@inject IJobData jobData

<h3>Job list</h3>

@if (jobList is null)
{
    <h4>Loading records...</h4>
}
else
{
    <table class="table table-hover">
        <thead class="thead-dark">
            <tr>
                <th>Name</th>
                <th>BasePath</th>
                <th>Interval</th>
                <th>Next run</th>
                <th>Last run</th>
                <th width="25%"></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var job in jobList)
            {
                <tr>
                    <td>@job.Name</td>
                    <td>@job.BasePath</td>
                    <td>@job.Interval</td>
                    <td>dummy</td>
                    <td>dummy</td>
                    <td>
                        <button class="btn btn-outline-success mt-1">
                            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-play-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path d="M11.596 8.697l-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z" />
                            </svg>
                        </button>
                        <button class="btn btn-outline-danger mt-1">
                            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-stop-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path d="M5 3.5h6A1.5 1.5 0 0 1 12.5 5v6a1.5 1.5 0 0 1-1.5 1.5H5A1.5 1.5 0 0 1 3.5 11V5A1.5 1.5 0 0 1 5 3.5z" />
                            </svg>
                        </button>
                        <a class="btn btn-outline-primary mt-1" href="/job/update/@job.Id">
                            <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-pencil-fill" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                <path fill-rule="evenodd" d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                            </svg>
                        </a>
                        @if (confirmDeleteId == job.Id)
                        {
                            <button class="btn btn-outline-danger" @onclick="(() => HandleDeleteRecord(job.Id))">
                                Confirm Delete
                            </button>
                            <button class="btn btn-secondary" @onclick="(() => confirmDeleteId = 0)">
                                Cancel
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-outline-danger" @onclick="(() => confirmDeleteId = job.Id)">
                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-trash" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                                    <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                                </svg>
                            </button>
                        }

                    </td>
                </tr>
            }

        </tbody>

    </table>
    <table class="table table-sm mt-5">
        <thead>
            <tr>
                <th colspan="2">Job Overview</th>
                <th colspan="2">Data Overview</th>
                <th colspan="2">Job Status</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>Duration:</td>
                <td></td>
                <td>Processed:</td>
                <td></td>
                <td>Successful:</td>
                <td></td>
            </tr>
            <tr>
                <td>Processing rate:</td>
                <td></td>
                <td>Read:</td>
                <td></td>
                <td>Warning:</td>
                <td></td>
            </tr>
            <tr>
                <td></td>
                <td></td>
                <td>Transmitted:</td>
                <td></td>
                <td>Error:</td>
                <td></td>
            </tr>
        </tbody>
    </table>

    <div>
        <label>Virtual Machines</label>
        <div style="background-color:aquamarine;">
            <div>1. VM</div>
            <div>2. VM</div>
            <div>3. VM</div>
        </div>
    </div>
    <div>
        <label>Status Log</label>
        <div style="background-color:cornflowerblue;">
            <div>Start</div>
            <div>1. Process</div>
            <div>2. Process</div>
            <div>Waiting...</div>
        </div>
    </div>
}

@code {
    private List<JobModel> jobList;
    private int confirmDeleteId = 0;

    protected override async Task OnInitializedAsync()
    {
        jobList = await jobData.GetJobs();
    }

    private async Task HandleDeleteRecord(int id)
    {
        await jobData.DeleteJob(id);
        jobList = await jobData.GetJobs();
        confirmDeleteId = 0;
    }


}

